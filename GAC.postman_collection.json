{
	"info": {
		"_postman_id": "61aa09a0-09ee-487a-8cbf-216637550ab1",
		"name": "GAC",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10259785"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Get User by token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNzQxMDI4MzMyLCJleHAiOjE3NDEwMzE5MzIsIm5iZiI6MTc0MTAyODMzMiwianRpIjoiYnp6b2lsSnNTNnZKTWJZUSIsInN1YiI6IjY0IiwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.dj44V5pwPhwekxICWQw144BEs1w7FnztOr2ZJr-b9O4",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/ecmascript",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}profile",
							"host": [
								"{{base_url}}profile"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Landro Camargo\",\n    \"email\": \"leandro10@mail.com\",\n    \"password\": \"maXFkb3bhOxA0Xmd8gnEG2C69EQrGLl+BkyFN1h4mjDSPb1eCpqjlO9YVLQMsOBV+5wCHg3v1l0mTBBn5l+6HsY2t+eBawzKfi3Qk171aGRkLqwjH2NhSo1BsFpoeBU2A6ZTkrjyzOKOPmrG/q0EprM9cR+EmoOVMshzxgcNL6m9hVR58lVKZy9Y+nt7hR7NB1Fz+mfv/U2i0ptmiHeu6tMcqy7KyQFSkJ4Qd1sHFqipIu9vKq3mlgKN6BnHlEZsJJDbrx04+z/vZfUN6LNXx7nUH1CyyGHjBPEu/g8PVytyKYmX2qQntDf3SarKpcfTWJS2734jzv0uFZKIHMRpAw==\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}register",
							"host": [
								"{{base_url}}register"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"leandro@gmail.com\",\n    \"password\": \"fbr95wMZaME7BgOqwtqMPv3hh/VUX+XOSIq6QVxxs5jOiBWRPh0ZKLxtWK5D5+H3QumSFMWoT8DKv3HGUUuAVI+fiRpOALY706PJVSkkMnZOmi5ZNvwUNB+P25SjoizZO3iBEnbafW0aYNtlGEq+l9S1Hl0xBO8N5OYCLNYj0F2C+1jNFqA2GFzlV2sd+cZeWkavr3MoyqlRr2g2rGDJV5WUoY6Yonfv8/3t9pXSxIxV5qwI1Nclm12yqhvDv6rv/+1sb04SPpDtXoY4Pasr0tQNSrbiTI8xqv5XnOdSEQMxVwM1PXUp+C8eqOkLARunr0bw96fAzVXYh2nrZYgJ4w==\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}login",
							"host": [
								"{{base_url}}login"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Update profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNzQxMDI4MzMyLCJleHAiOjE3NDEwMzE5MzIsIm5iZiI6MTc0MTAyODMzMiwianRpIjoiYnp6b2lsSnNTNnZKTWJZUSIsInN1YiI6IjY0IiwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.dj44V5pwPhwekxICWQw144BEs1w7FnztOr2ZJr-b9O4",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Leandro Teste\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}profile",
							"host": [
								"{{base_url}}profile"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "Delete profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNzQxMDI4MzMyLCJleHAiOjE3NDEwMzE5MzIsIm5iZiI6MTc0MTAyODMzMiwianRpIjoiYnp6b2lsSnNTNnZKTWJZUSIsInN1YiI6IjY0IiwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.dj44V5pwPhwekxICWQw144BEs1w7FnztOr2ZJr-b9O4",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}profile",
							"host": [
								"{{base_url}}profile"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "Transaction",
			"item": [
				{
					"name": "Deposit",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNzQxMDM5OTA5LCJleHAiOjE3NDEwNDM1MDksIm5iZiI6MTc0MTAzOTkwOSwianRpIjoibVNjQ0VwVnJoYVU2ako2MiIsInN1YiI6IjMxIiwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.zz-n8g-iznNTOriBg5ysUdGKkhhh2gq8vG1xBOx572U",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \n    \"receiver_id\": 18,\n    \"amount\": 300,\n    \"type\": \"deposit\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}transactions/deposit",
							"host": [
								"{{base_url}}transactions"
							],
							"path": [
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Transaction for User",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNzQxMTQzNDc1LCJleHAiOjE3NDEyMjk4NzUsIm5iZiI6MTc0MTE0MzQ3NSwianRpIjoiSGY4UHFuMURaNHV6TElZTCIsInN1YiI6IjExIiwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.hH51367eHwtL8Iu6xbENJfFAz1KniEUj3VD1dwVvqrI",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \n    \"receiver_id\": 11,\n    \"amount\": 500,\n    \"type\": \"deposit\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}transactions/18",
							"host": [
								"{{base_url}}transactions"
							],
							"path": [
								"18"
							]
						}
					},
					"response": []
				},
				{
					"name": "Transfer",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNzQxMTQzNDc1LCJleHAiOjE3NDEyMjk4NzUsIm5iZiI6MTc0MTE0MzQ3NSwianRpIjoiSGY4UHFuMURaNHV6TElZTCIsInN1YiI6IjExIiwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.hH51367eHwtL8Iu6xbENJfFAz1KniEUj3VD1dwVvqrI",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"sender_id\": 18,\n  \"recipient_id\": 1,\n  \"amount\": 7,\n  \"type\": \"transfer\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}transactions/transfer",
							"host": [
								"{{base_url}}transactions"
							],
							"path": [
								"transfer"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reversal",
			"item": [
				{
					"name": "Reversal transaction",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNzQxMTQzNDc1LCJleHAiOjE3NDEyMjk4NzUsIm5iZiI6MTc0MTE0MzQ3NSwianRpIjoiSGY4UHFuMURaNHV6TElZTCIsInN1YiI6IjExIiwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.hH51367eHwtL8Iu6xbENJfFAz1KniEUj3VD1dwVvqrI",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"account_id\": 18,\n  \"transaction_id\": 54,\n  \"reason\": \"Teste transation\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}reversals/transfer/18",
							"host": [
								"{{base_url}}reversals"
							],
							"path": [
								"transfer",
								"18"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reversal deposit",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNzQxMTQzNDc1LCJleHAiOjE3NDEyMjk4NzUsIm5iZiI6MTc0MTE0MzQ3NSwianRpIjoiSGY4UHFuMURaNHV6TElZTCIsInN1YiI6IjExIiwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.hH51367eHwtL8Iu6xbENJfFAz1KniEUj3VD1dwVvqrI",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"transaction_id\": 70,\n  \"reason\": \"Teste\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}reversals/deposit/16",
							"host": [
								"{{base_url}}reversals"
							],
							"path": [
								"deposit",
								"16"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Account",
			"item": [
				{
					"name": "Get accounts",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNzQxMTM5ODIyLCJleHAiOjE3NDEyMjYyMjIsIm5iZiI6MTc0MTEzOTgyMiwianRpIjoiTWt1UEFVaE9TS1lINFV5TCIsInN1YiI6IjE0IiwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.HCKUoathf_hHgAC4CD7ABSDUta180nLmZbCrrvNwK-o",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}accounts",
							"host": [
								"{{base_url}}accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNzQxMDM0MDc4LCJleHAiOjE3NDEwMzc2NzgsIm5iZiI6MTc0MTAzNDA3OCwianRpIjoiYmg2dVJqWEZ2QmpZRmJFYyIsInN1YiI6IjMxIiwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.s7tINcs-FQBKZB4kQbzgQDXT7Kl6SFyR_6xXUHgpTUI",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}accounts/72",
							"host": [
								"{{base_url}}accounts"
							],
							"path": [
								"72"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get accounts Copy",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNzQxMDM0MDc4LCJleHAiOjE3NDEwMzc2NzgsIm5iZiI6MTc0MTAzNDA3OCwianRpIjoiYmg2dVJqWEZ2QmpZRmJFYyIsInN1YiI6IjMxIiwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.s7tINcs-FQBKZB4kQbzgQDXT7Kl6SFyR_6xXUHgpTUI",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}accounts/71",
							"host": [
								"{{base_url}}accounts"
							],
							"path": [
								"71"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNzQxMTQzNDc1LCJleHAiOjE3NDEyMjk4NzUsIm5iZiI6MTc0MTE0MzQ3NSwianRpIjoiSGY4UHFuMURaNHV6TElZTCIsInN1YiI6IjExIiwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.hH51367eHwtL8Iu6xbENJfFAz1KniEUj3VD1dwVvqrI",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Conta teste\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}accounts",
							"host": [
								"{{base_url}}accounts"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}